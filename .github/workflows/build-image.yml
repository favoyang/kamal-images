# Reusable workflow to build and push Docker images to GitHub Container Registry
name: Build Image (Reusable)

# This is a reusable workflow
on:
  workflow_call:
    inputs:
      docker_name:
        description: 'Name of the Docker image directory and final image'
        required: true
        type: string
      docker_description:
        description: 'Description of the Docker image'
        required: true
        type: string
      version_regex:
        description: 'Regex pattern to extract version from Dockerfile'
        required: true
        type: string
      platforms:
        description: 'Target platforms for the build'
        required: false
        type: string
        default: 'linux/amd64'

# Environment variables available to all jobs and steps in this workflow
env:
  DOCKER_BUILDKIT: 1

# Jobs to run once the workflow is triggered
jobs:
  # Job to get image and repository details
  metadata:
    name: Get image and repository details
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}
      labels: ${{ steps.metadata.outputs.labels }}
      tags: ${{ steps.metadata.outputs.tags }}
      platforms: ${{ inputs.platforms }}
      should_build: ${{ steps.check_version.outputs.should_build }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Parse version from Dockerfile
        id: version
        run: echo "version=$(grep -oP '${{ inputs.version_regex }}' ${{ inputs.docker_name }}/Dockerfile)" | tee -a $GITHUB_OUTPUT

      - name: Generate image metadata with parsed version
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ inputs.docker_name }}
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=v${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.title=${{ inputs.docker_name }}
            org.opencontainers.image.description=${{ inputs.docker_description }}

      - name: Check if version already exists in registry
        id: check_version
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository }}/${{ inputs.docker_name }}"
          VERSION="${{ steps.version.outputs.version }}"
          
          echo "Checking if $IMAGE_NAME:$VERSION already exists..."
          
          # Login to GHCR to check if image exists
          echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Try to pull the image manifest to check if it exists
          if docker manifest inspect "$IMAGE_NAME:$VERSION" >/dev/null 2>&1; then
            echo "Version $VERSION already exists in registry"
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION does not exist in registry, will build and push"
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

  # Job to skip build when version already exists
  skip:
    name: Skip build - version already exists
    runs-on: ubuntu-latest
    needs: metadata
    if: needs.metadata.outputs.should_build == 'false'
    
    steps:
      - name: Skip build notification
        run: |
          echo "Skipping build for ${{ inputs.docker_name }} version ${{ needs.metadata.outputs.version }}"
          echo "This version already exists in the registry"

  # Job to build and publish Docker image
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    needs: metadata
    if: needs.metadata.outputs.should_build == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Repository
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and publish container image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          file: ./${{ inputs.docker_name }}/Dockerfile
          push: true
          provenance: false
          tags: ${{ needs.metadata.outputs.tags }}
          labels: ${{ needs.metadata.outputs.labels }}
          platforms: ${{ needs.metadata.outputs.platforms }}
